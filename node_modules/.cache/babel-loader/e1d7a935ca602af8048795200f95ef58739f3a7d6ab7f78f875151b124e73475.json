{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from '../utils/constants';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\n\n// Auth endpoints\nexport const authAPI = {\n  login: data => api.post('/auth/login', data),\n  changePassword: data => api.put('/auth/change-password', data),\n  updateProfile: data => api.put('/auth/update-profile', data),\n  uploadPhoto: formData => api.post('/auth/upload-photo', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Admin endpoints\nexport const adminAPI = {\n  createCenter: data => api.post('/admin/learning-centers', data),\n  getCenters: () => api.get('/admin/learning-centers')\n};\n\n// Manager endpoints\nexport const managerAPI = {\n  createUser: data => api.post('/manager/users', data),\n  getUsers: role => api.get(`/manager/users?role=${role}`),\n  getStats: () => api.get('/manager/stats')\n};\n\n// Assistant endpoints\nexport const assistantAPI = {\n  setAvailability: data => api.post('/assistant/availability', data),\n  getAvailability: () => api.get('/assistant/availability'),\n  getSessionsByTime: (date, time) => api.get(`/assistant/sessions/${date}/${time}`),\n  markAttendance: (sessionId, data) => api.put(`/assistant/sessions/${sessionId}/attendance`, data),\n  getSessions: status => api.get(`/assistant/sessions?status=${status}`)\n};\n\n// Student endpoints\nexport const studentAPI = {\n  getAssistants: () => api.get('/student/assistants'),\n  bookSession: data => api.post('/student/sessions', data),\n  getSessions: status => api.get(`/student/sessions?status=${status}`),\n  rateSession: data => api.post('/student/ratings', data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","data","post","changePassword","put","updateProfile","uploadPhoto","formData","adminAPI","createCenter","getCenters","get","managerAPI","createUser","getUsers","role","getStats","assistantAPI","setAvailability","getAvailability","getSessionsByTime","date","time","markAttendance","sessionId","getSessions","studentAPI","getAssistants","bookSession","rateSession"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/education_center_assistant_system/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { API_BASE_URL } from '../utils/constants';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth endpoints\nexport const authAPI = {\n  login: (data) => api.post('/auth/login', data),\n  changePassword: (data) => api.put('/auth/change-password', data),\n  updateProfile: (data) => api.put('/auth/update-profile', data),\n  uploadPhoto: (formData) => api.post('/auth/upload-photo', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  })\n};\n\n// Admin endpoints\nexport const adminAPI = {\n  createCenter: (data) => api.post('/admin/learning-centers', data),\n  getCenters: () => api.get('/admin/learning-centers')\n};\n\n// Manager endpoints\nexport const managerAPI = {\n  createUser: (data) => api.post('/manager/users', data),\n  getUsers: (role) => api.get(`/manager/users?role=${role}`),\n  getStats: () => api.get('/manager/stats')\n};\n\n// Assistant endpoints\nexport const assistantAPI = {\n  setAvailability: (data) => api.post('/assistant/availability', data),\n  getAvailability: () => api.get('/assistant/availability'),\n  getSessionsByTime: (date, time) => api.get(`/assistant/sessions/${date}/${time}`),\n  markAttendance: (sessionId, data) => api.put(`/assistant/sessions/${sessionId}/attendance`, data),\n  getSessions: (status) => api.get(`/assistant/sessions?status=${status}`)\n};\n\n// Student endpoints\nexport const studentAPI = {\n  getAssistants: () => api.get('/student/assistants'),\n  bookSession: (data) => api.post('/student/sessions', data),\n  getSessions: (status) => api.get(`/student/sessions?status=${status}`),\n  rateSession: (data) => api.post('/student/ratings', data)\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}